@using MTS.Web.Models.Curriculum.Quiz
@model TakeQuizViewModel
@{
    ViewData["Title"] = "Quiz Question";
    Layout = "_QuizLayout"; // We'll create this layout to remove distractions
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h3>@Model.Quiz.Title</h3>
                <div>
                    <span id="timer" class="badge bg-warning">Time Remaining: <span id="time-value">@Model.TimeRemaining</span></span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="progress mb-4">
                <div class="progress-bar" role="progressbar" style="width: @((Model.QuestionIndex + 1) * 100 / Model.TotalQuestions)%;"
                     aria-valuenow="@((Model.QuestionIndex + 1) * 100 / Model.TotalQuestions)" aria-valuemin="0" aria-valuemax="100">
                    Question @(Model.QuestionIndex + 1) of @Model.TotalQuestions
                </div>
            </div>

            <div class="question-container">
                <h4>@Model.Question.QuestionText</h4>
                <p class="text-muted">@Model.Question.Points points</p>

                <form method="post" asp-action="Answer">
                    <input type="hidden" name="AttemptCode" value="@Model.Attempt.AttemptCode" />
                    <input type="hidden" name="QuizQuestionCode" value="@Model.Question.QuizQuestionCode" />
                    <input type="hidden" name="questionIndex" value="@Model.QuestionIndex" />
                    <input type="hidden" name="totalQuestions" value="@Model.TotalQuestions" />

                    @if (Model.Quiz.QuizType == "MultipleChoice" && Model.Answers.Any())
                    {
                        <div class="list-group mt-4">
                            @foreach (var answer in Model.Answers)
                            {
                                <div class="form-check mb-3">
                                    <input class="form-check-input" type="radio" name="AnswerCode" id="answer_@answer.AnswerCode"
                                           value="@answer.AnswerCode" @(Model.StudentAnswer?.AnswerCode == answer.AnswerCode ? "checked" : "") />
                                    <label class="form-check-label" for="answer_@answer.AnswerCode">
                                        @answer.OptionText
                                    </label>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="form-group mt-4">
                            <label for="textAnswer">Your Answer:</label>
                            <textarea class="form-control" id="textAnswer" name="TextAnswer" rows="4">@Model.StudentAnswer?.TextAnswer</textarea>
                        </div>
                    }
                    <div class="d-flex justify-content-between mt-4">
                        @if (Model.QuestionIndex > 0)
                        {
                            <a href="@Url.Action("Answer", new { attemptCode = Model.Attempt.AttemptCode, questionIndex = Model.QuestionIndex - 1 })"
                               class="btn btn-outline-primary">Previous</a>
                        }
                        else
                        {
                            <div></div>
                        }

                        @if (Model.QuestionIndex < Model.TotalQuestions - 1)
                        {
                            <button type="submit" class="btn btn-primary">Next</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success">Finish Quiz</button>
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Timer logic
        var timeRemaining = @Model.TimeRemaining;
        var timerElement = document.getElementById('time-value');

        var timer = setInterval(function() {
            timeRemaining--;

            if (timeRemaining <= 0) {
                clearInterval(timer);
                // Auto-submit the form when time expires
                document.querySelector('form').submit();
            }

            // Update the display
            var minutes = Math.floor(timeRemaining / 60);
            var seconds = timeRemaining % 60;
            timerElement.textContent = minutes + ':' + (seconds < 10 ? '0' : '') + seconds;

            // Change color when time is running low
            if (timeRemaining < 60) {
                document.getElementById('timer').classList.remove('bg-warning');
                document.getElementById('timer').classList.add('bg-danger');
            }
        }, 1000);
    </script>
}
